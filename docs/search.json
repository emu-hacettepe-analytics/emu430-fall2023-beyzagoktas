[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Course Project",
    "section": "",
    "text": "I’m honored to be a member of the Synergy project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to our webpage.\nSummary\nIn our project, we plan to utilize a dataset containing comprehensive statistics on museums and libraries across various cities in Turkey. This dataset encompasses diverse metrics, including the quantity of libraries, museums, registered library members, and museum visitors in each city.\nOur focus is to explore averages, maximums and other relevant parameters, aiming to provide in-depth analyzes of the cultural environment of cities over time. With these analyses, we aim to reveal valuable information about the use of cultural institutions in each city and shed light on the delicate balance between cultural service supply and demand.\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Beyza Göktaş.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\nDon’t hesitate to explore!\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "My second assignment has 4 parts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hello, my name is Beyza Göktaş. I’m a fourth year undergraduate student at Hacettepe University, Department of Industrial Engineering. My favorite course by far in my department is data analytics course.\n\nEducation\n\nB.S., Industrial Engineering, Hacettepe University, Turkey, 2019 - ongoing.\nErasmus+ Exchange Student, RWTH Aachen University, Germany, October 2022 - March 2023.\n\n\n\nInternships\n\nTUSAŞ, Internal Logistics Department, Summer Intern, July 2023\nFNSS, Business Strategy Department, Candidate Engineer, November 2023\n\n\n\nProjects\nGraduation Project: Mavi - Price Optimization\n\n\nCompetencies\nR, Quarto, Git, Python, Minitab, Excel, Matlab, SQL\n\n\nHobbies\nBoardgames, Painting\n\n\nResume\nYou can find my resume here: BeyzaGöktaş.pdf\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nFirm xxx, position xx, year xxx\nFirm yyy, position yyy, year yyy"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nTUSAŞ, Internal Logistics Department, July 2023"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has three parts."
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the 2023-2024 Fall Semester EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on November 2, 2023.\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html#c",
    "href": "assignments/assignment-1.html#c",
    "title": "Assignment 1",
    "section": "(c)",
    "text": "(c)\n\nlibrary(dslabs)\ndata(\"na_example\")\n# NA data frame\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\n# Total number of NAs\nsum(is.na(na_example))\n\n[1] 145\n\n# New data frame where NAs replaced with 0.\nno_nas &lt;- ifelse(is.na(na_example), 0, na_example)\nno_nas\n\n   [1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4 1 1 1 4\n  [38] 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0 1 0 4 1 2 2 3 2\n  [75] 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1 1 4 1 1 2 3 3 2 2 3 3 3\n [112] 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4\n [149] 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1\n [186] 3 1 1 0 0 3 5 2 2 2 3 1 2 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1\n [223] 1 2 3 1 1 1 4 3 4 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3\n [260] 4 6 2 2 2 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3\n [297] 1 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0 2 1 1\n [334] 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1 2 2 1 2 2 6 1\n [371] 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2 0 1 2 1 1 4 2 1 4 4 0\n [408] 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4\n [445] 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1\n [482] 2 2 2 3 2 3 1 1 0 3 2 1 1 2 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1\n [519] 2 5 1 1 2 2 1 1 0 1 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1\n [556] 3 1 3 2 4 0 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2\n [593] 2 2 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1 1 3\n [630] 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3 2 4 2 2 4 0\n [667] 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6 2 0 4 1 3 1 2 0 1 1\n [704] 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0 1 2 2 2 2 4 5 0 0 0 4 3 3 3\n [741] 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2\n [778] 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3\n [815] 1 5 2 2 4 2 0 1 3 1 2 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3\n [852] 1 0 5 5 2 2 2 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3\n [889] 3 2 2 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0 0\n [926] 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2 3 1 2 3 0\n [963] 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0 1 1 2 2 1 1 2 2 0\n[1000] 2\n\n# Total number of NAs in our new data frame.\nsum(is.na(no_nas))\n\n[1] 0"
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "(b)",
    "text": "(b)\nThe two languages’ approaches to data science are where they diverge most. Large communities support both open source programming languages, adding new libraries and tools on a regular basis. However, Python offers a more universal method of handling data wrangling, whereas R is mostly utilized for statistical analysis.\nLike C++ and Java, Python is a multipurpose language with an easy-to-learn and understandable syntax. Python is a tool used by programmers for machine learning in scalable production contexts and for data analysis.\nR, on the other hand, is mostly based on statistical models and specialized analytics and was developed by statisticians. With just a few lines of code and stunning data visualizations, R is used by data scientists for extensive statistical research.\n\nExamples\n\nWe can select specific elements. In Python, the values start at index 0, while in R they start at index 1:\n\n\n# A vector in R:\nmy_vec &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")\nprint(my_vec)\n\n[1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\"\n\n# First element\nmy_vec[1]\n\n[1] \"a\"\n\n\n\n# A list in Python:\nmy_list = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\nprint(my_list)\n\n['a', 'b', 'c', 'd', 'e', 'f']\n\n# First element\nprint(my_list[0])\n\na\n\n\n\nWhen selecting multiple values, in R the index range is 1:3 = {1, 2, 3}, while in Python the index range 0:3 = {0, 1, 2} - the last value is not included.\n\n\nmy_vec[1:3]\n\n[1] \"a\" \"b\" \"c\"\n\n\n\nmy_list[0:3]\n\n['a', 'b', 'c']\n\n\n\nFunctions are defined different.\n\n\nmy_sum &lt;- function(x, y){\n  x &lt;- x + 1\n  y &lt;- y + 1\n  x + y\n}\n#Test the function\nprint(my_sum(1, 2))\n\n[1] 5\n\n\n\ndef my_sum(x, y):\n  x = x + 1\n  y = y + 1\n  return x + y\n#\n#Test the function\nprint(my_sum(1, 2))\n\n5\n\n\n\nLists in R similar to the dictionaries in Python.\n\n\nmy_data &lt;- list(name = \"Beyza\",\n                grades = c(9, 10, 9),\n                has_attended = TRUE)\nstr(my_data)\n\nList of 3\n $ name        : chr \"Beyza\"\n $ grades      : num [1:3] 9 10 9\n $ has_attended: logi TRUE\n\n\n\nmy_data = {\"name\": \"Beyza\",\n           \"grades\": [9, 10, 9],\n           \"has_attended\": True}\nprint(type(my_data))\n\n&lt;class 'dict'&gt;"
  },
  {
    "objectID": "assignments/assignment-1.html#a",
    "href": "assignments/assignment-1.html#a",
    "title": "Assignment 1",
    "section": "(a)",
    "text": "(a)\nHere is the video I have watched: Tracy Teal | These are a few of my favorite things\nThe video highlighted the powerful capabilities of Quarto, a platform that seamlessly integrates code, slides, figures, and documentation. Emphasizing the significance of comprehensive documentation and integration, the discussion centered on how this approach facilitates the reproduction, effective communication, and sharing of ideas and findings. The key focus was on adapting content to meet the audience’s needs while highlighting Quarto’s advantages, including integrated code, visual editing, structured tables, and customizable themes. These features offer a flexible and efficient way to present and share information, fostering creativity and saving time.\nVisual edits,\nColumns and tables,\nCode first keeps slides stable,\nThemes to delight in and formats to share,\nThese are a few of my favorite things."
  },
  {
    "objectID": "assignments/assignment-2.html#part-1.",
    "href": "assignments/assignment-2.html#part-1.",
    "title": "Assignment 2",
    "section": "",
    "text": "library(tidyverse)\nWarning: package 'tidyverse' was built under R version 4.3.2\nWarning: package 'tidyr' was built under R version 4.3.2\nWarning: package 'readr' was built under R version 4.3.2\nWarning: package 'purrr' was built under R version 4.3.2\nWarning: package 'dplyr' was built under R version 4.3.2\nWarning: package 'forcats' was built under R version 4.3.2\nWarning: package 'lubridate' was built under R version 4.3.2\nlibrary(rvest)\nWarning: package 'rvest' was built under R version 4.3.2\nlibrary(stringr)\nfirst &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR\"\nsecond &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR\"\n\nurl &lt;- c(first,second)"
  },
  {
    "objectID": "assignments/assignment-2.html#part-1",
    "href": "assignments/assignment-2.html#part-1",
    "title": "Assignment 2",
    "section": "Part 1",
    "text": "Part 1\nUsing the filters on https://m.imdb.com/search, Turkish movies with more than 2500 reviews are saved in the URLs.\n\nShow the code\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(knitr)\nlibrary(stringr)\nfirst &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR\"\nsecond &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR\"\n\nurl &lt;- c(first,second)"
  },
  {
    "objectID": "assignments/assignment-2.html#part-11",
    "href": "assignments/assignment-2.html#part-11",
    "title": "Assignment 2",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\nWarning: package 'tidyr' was built under R version 4.3.2\nWarning: package 'readr' was built under R version 4.3.2\nWarning: package 'purrr' was built under R version 4.3.2\nWarning: package 'dplyr' was built under R version 4.3.2\nWarning: package 'forcats' was built under R version 4.3.2\nWarning: package 'lubridate' was built under R version 4.3.2\n\nCode\nlibrary(rvest)\n\nWarning: package 'rvest' was built under R version 4.3.2\n\nCode\nlibrary(stringr)\nfirst &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR\"\nsecond &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR\"\n\nurl &lt;- c(first,second)"
  },
  {
    "objectID": "assignments/assignment-2.html#part-2",
    "href": "assignments/assignment-2.html#part-2",
    "title": "Assignment 2",
    "section": "Part 2",
    "text": "Part 2\nMade web scrapping to create a Data Frame with columns: Title, Year, Duration, Rating, Votes\n\nShow the code\n# Initialize an empty data frame\nmovies &lt;- tibble(Title = character(), Year = numeric(), Duration = character(), Rating = numeric(), Votes = numeric())\n\n\n# Function to convert duration from to minutes\nconvert_to_minutes &lt;- function(time_str) {\n  if (str_detect(time_str, \"h\")) {\n    # \"h\" ve \"m\" arasındaki dakikaları ve \"h\"den önceki saatleri bul\n    hours &lt;- as.numeric(str_extract(time_str, \"\\\\d+(?=h)\"))\n    minutes &lt;- as.numeric(str_extract(time_str, \"(?&lt;=h)\\\\s*\\\\d+\"))\n    total_minutes &lt;- hours * 60 + ifelse(is.na(minutes), 0, minutes)\n  } else {\n    # \"h\" bulunmuyorsa ilk iki karakteri al\n    total_minutes &lt;- as.numeric(substr(time_str, 1, str_detect(time_str, \"m\")*2))\n  }\n  return(total_minutes)\n}\n\n# Loop through each URL\nfor (i in url) {\n  data_html &lt;- read_html(i)\n  \n  # Extracting movie titles\n  title_names &lt;- data_html |&gt; html_nodes('.ipc-title__text') |&gt; html_text()\n  title_names &lt;- tail(head(title_names, -1), -1)\n  title_names &lt;- str_split(title_names, \" \", n = 2)\n  title_names &lt;- unlist(lapply(title_names, function(x) {x[2]}))\n  \n  # Extracting years\n  year &lt;- data_html %&gt;% html_nodes(\".sc-43986a27-7.dBkaPT.dli-title-metadata\")\n  year &lt;- html_text(year)\n  year &lt;- substr(year, 1, 4)\n  year &lt;- as.numeric(year)\n  \n  # Extracting durations\n  duration &lt;- data_html %&gt;% html_nodes(\".sc-43986a27-7.dBkaPT.dli-title-metadata\")\n  duration &lt;- html_text(duration)\n  duration &lt;- substr(duration, start = 5, stop = 14)\n\n  # Extracting ratings\n  rating &lt;- data_html %&gt;% html_nodes(\".ipc-rating-star.ipc-rating-star--base.ipc-rating-star--imdb.ratingGroup--imdb-rating\")\n  rating &lt;- html_text(rating)\n  rating &lt;- substr(rating, 1, 3)\n  rating &lt;- as.numeric(rating)\n  \n  # Extracting votes\n  vote &lt;- data_html %&gt;% html_nodes(\".sc-53c98e73-0.kRnqtn\")\n  vote &lt;- html_text(vote)\n  vote &lt;- sub(\"Votes\", \"\" ,vote)\n  vote &lt;- sub(\",\", \"\", vote)\n  vote &lt;- as.numeric(vote)\n  \n  \n  temp &lt;- tibble(Title = title_names, Year = year, Duration = duration, Rating = rating, Votes = vote)\n  \n  # Append to the main data frame\n  movies &lt;- bind_rows(movies, temp)\n}\n\n#The function written above is run to organize the durations of the films\nduration_final &lt;- sapply(movies$Duration, convert_to_minutes)\nmovies$Duration &lt;- duration_final\n\n# Final results\nkable(head(movies,10), caption = \"Movies\")\n\n\n\nMovies\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nNefes: Vatan Sagolsun\n2009\n128\n8.0\n35026\n\n\nBabam ve Oglum\n2005\n108\n8.2\n91043\n\n\nMasumiyet\n1997\n110\n8.1\n19300\n\n\nKader\n2006\n103\n7.8\n16269\n\n\nUzak\n2002\n110\n7.5\n22374\n\n\nEskiya\n1996\n128\n8.1\n71705\n\n\nA.R.O.G\n2008\n127\n7.3\n44636\n\n\nSevmek Zamani\n1965\n86\n8.0\n7133\n\n\nHababam Sinifi\n1975\n87\n9.2\n42514\n\n\nÜç Maymun\n2008\n109\n7.3\n22667"
  },
  {
    "objectID": "assignments/assignment-2.html#part-3",
    "href": "assignments/assignment-2.html#part-3",
    "title": "Assignment 2",
    "section": "Part 3",
    "text": "Part 3"
  }
]